# HashFoundry Blockchain Configuration

# Global Settings
global:
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Blockchain Network Configuration
blockchain:
  chainName: "HashFoundry Local Testnet"
  chainId: "hashfoundry_local"
  tokenSymbol: "HF"
  tokenDecimals: 12
  blockTime: 6  # seconds
  ss58Format: 42

# Alice Validator Configuration
validatorAlice:
  enabled: true
  name: "substrate-validator-alice"
  replicaCount: 1
  
  image:
    repository: parity/substrate
    tag: "latest"
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  
  # Storage configuration
  persistence:
    enabled: true
    storageClass: "do-block-storage"
    size: "50Gi"
    accessMode: "ReadWriteOnce"
  
  # Service configuration
  service:
    type: ClusterIP
    rpcPort: 9933
    wsPort: 9944
    p2pPort: 30333
    prometheusPort: 9615
  
  # Node configuration
  nodeConfig:
    validator: true
    authority: "alice"
    rpcExternal: true
    wsExternal: true
    prometheusExternal: true
    telemetryUrl: ""
    logLevel: "info"
    unsafeRpcExternal: true
    unsafeWsExternal: true
    rpcCors: "all"
  
  # Account configuration
  account:
    address: "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY"
    initialBalance: "1000000000000000"  # 1M tokens (12 decimals)

# Bob Validator Configuration
validatorBob:
  enabled: true
  name: "substrate-validator-bob"
  replicaCount: 1
  
  image:
    repository: parity/substrate
    tag: "latest"
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  
  # Storage configuration
  persistence:
    enabled: true
    storageClass: "do-block-storage"
    size: "50Gi"
    accessMode: "ReadWriteOnce"
  
  # Service configuration
  service:
    type: ClusterIP
    rpcPort: 9933
    wsPort: 9944
    p2pPort: 30333
    prometheusPort: 9615
  
  # Node configuration
  nodeConfig:
    validator: true
    authority: "bob"
    rpcExternal: true
    wsExternal: true
    prometheusExternal: true
    telemetryUrl: ""
    logLevel: "info"
    unsafeRpcExternal: true
    unsafeWsExternal: true
    rpcCors: "all"
  
  # Account configuration
  account:
    address: "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"
    initialBalance: "1000000000000000"  # 1M tokens (12 decimals)

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "substrate-validator-alice,substrate-validator-bob"
  
  hosts:
    alice:
      host: blockchain-rpc-1.hashfoundry.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: substrate-validator-alice
              port:
                number: 9944
    bob:
      host: blockchain-rpc-2.hashfoundry.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: substrate-validator-bob
              port:
                number: 9944

# Monitoring Configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
    interval: "15s"
    scrapeTimeout: "10s"

# Network Policy
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 9933
        - protocol: TCP
          port: 9944
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: blockchain
      ports:
        - protocol: TCP
          port: 30333
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: blockchain
      ports:
        - protocol: TCP
          port: 30333

# Pod Security Context
podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsNonRoot: true

# Security Context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL

# Health Checks
healthChecks:
  liveness:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    httpGet:
      path: /health
      port: 9933
  
  readiness:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    httpGet:
      path: /health
      port: 9933

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Anti-affinity configuration
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: blockchain
        topologyKey: kubernetes.io/hostname

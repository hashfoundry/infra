# Default values for HashFoundry React
nginx:
  # HA configuration with multiple replicas
  replicaCount: 3
  
  # Image configuration
  image:
    registry: docker.io
    repository: alexhashfoundry/hashfoundry-react
    tag: 186ebf92e34bd9575a982b0cc0a0920d646406a2
    pullPolicy: IfNotPresent
    
  # Security context for the container to fix permission issues
  containerSecurityContext:
    enabled: false
  
  # Pod security context
  podSecurityContext:
    enabled: false
    
  # Init containers to set up permissions
  extraInitContainers:
    - name: init-nginx-permissions
      image: busybox
      command: ['sh', '-c', 'mkdir -p /bitnami/nginx/tmp && chmod -R 777 /bitnami/nginx']
      volumeMounts:
        - name: nginx-data
          mountPath: /bitnami/nginx
          
  # Extra volumes for Nginx
  extraVolumes:
    - name: nginx-data
      emptyDir: {}
      
  # Extra volume mounts for Nginx
  extraVolumeMounts:
    - name: nginx-data
      mountPath: /bitnami/nginx
  
  # Service configuration for dev
  service:
    type: ClusterIP
    port: 80
  
  # Configure Nginx to serve the React application
  containerPorts:
    http: 80
    
  serverBlock: |-
    server {
      listen 0.0.0.0:80;
      server_name localhost;
      
      location /status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
      }
      
      location / {
        root /app;
        index index.html;
        try_files $uri $uri/ /index.html;
      }
    }
  
  # Resource limits and requests for dev
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 64Mi
  
  # Ingress configuration for dev
  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: app-dev.hashfoundry.local
    path: /
    pathType: Prefix
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
            
  # Monitoring configuration for dev
  metrics:
    enabled: false
    
  # Autoscaling configuration for HA
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    
  # Liveness and readiness probes
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
    tcpSocket:
      port: http
    
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
    tcpSocket:
      port: http
      
  # Pod configuration with anti-affinity for HA
  podAnnotations: {}
  podLabels: {}
  
  # Anti-affinity for HA distribution
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: nginx
              app.kubernetes.io/instance: hashfoundry-react
          topologyKey: kubernetes.io/hostname

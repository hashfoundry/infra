apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nfs-exporter.fullname" . }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  labels:
    {{- include "nfs-exporter.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "nfs-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nfs-exporter.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.nfsExporter.service.port }}"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        {{- toYaml .Values.nfsExporter.securityContext | nindent 8 }}
      containers:
      - name: nfs-exporter
        image: "{{ .Values.nfsExporter.image.repository }}:{{ .Values.nfsExporter.image.tag }}"
        imagePullPolicy: {{ .Values.nfsExporter.image.pullPolicy }}
        args:
          - --web.listen-address=:{{ .Values.nfsExporter.service.targetPort }}
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
          - --path.rootfs=/host/root
          - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
          - --collector.netstat
          - --collector.nfs
          - --collector.nfsd
        ports:
        - name: metrics
          containerPort: {{ .Values.nfsExporter.service.targetPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          {{- toYaml .Values.nfsExporter.resources | nindent 10 }}
        volumeMounts:
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: root
          mountPath: /host/root
          readOnly: true
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: root
        hostPath:
          path: /
      {{- with .Values.nfsExporter.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nfsExporter.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nfsExporter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
